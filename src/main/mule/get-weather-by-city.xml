<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:validation="http://www.mulesoft.org/schema/mule/validation" xmlns:wsc="http://www.mulesoft.org/schema/mule/wsc"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/wsc http://www.mulesoft.org/schema/mule/wsc/current/mule-wsc.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd">
	<flow name="get:\countries\(country)\cities\(city)\weather:weather-service-v1-config" doc:id="eb550c12-832b-4bef-a310-4871d578b993" >
		<logger level="INFO" doc:name="Log request" doc:id="13711333-ab63-4ace-b020-ba4da5b69b7c" message="#[modules::Logs::log(vars)]" category="weather-service-v1.get-weather-by-city.request" />
		<set-variable value="#[attributes.uriParams.country]" doc:name="Set country" doc:id="faab37eb-1501-40b9-b583-de66e33bcd57" variableName="country" />
		<set-variable value="#[attributes.uriParams.city]" doc:name="Set city" doc:id="3fbf2ed1-8a2a-4691-aa9d-332551fb719b" variableName="city" />
		<flow-ref doc:name="Get weather by city" doc:id="29658d80-a1e8-44c5-979f-7f6851102961" name="get-weather-by-city-request-subflow" />
		<ee:transform doc:name="Convert payload to XML and get weather data" doc:id="0afe05f3-2667-4bfe-bdb6-0472b62d92a1" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/xml
import decodeXmlResponse from modules::Xml

var weatherData = (read(decodeXmlResponse(payload), "application/xml")).Envelope.Body.GetWeatherResponse
---
// Need to put the weather data inside a "weather" object to convert to xml
if (isEmpty(weatherData))
	{
		"weather": null
	}
else
	{
		// if weather data is not empty then need to read the data as XML again
		// as the returned data from webservice was converted to CDATA twice
		"weather": read(weatherData, "application/xml")
	}
		]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<choice doc:name="Is returned weather data empty?" doc:id="ae870d50-803f-4a0e-a2ff-d0ec4ace91f7" >
			<when expression="#[!isEmpty(payload.weather)]">
				<ee:transform doc:name="Map XML weather data to JSON" doc:id="e1e07716-1896-49a9-a09c-869b62148b80">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
// Map XML payload to convert to JSON
payload.weather.NewDataSet mapObject (value, key, index) -> {(key): value}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
			</when>
			<otherwise >
				<ee:transform doc:name="Return error message" doc:id="9851d731-4889-47c0-8f83-eddde7d05216" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"message": "Unable to retrive weather data for the requested city"
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</otherwise>
		</choice>
		<logger level="INFO" doc:name="Log response" doc:id="e2695c7e-9a9c-4883-8acf-4f987f5b6f77" message='#[modules::Logs::log(vars, {
	"city": vars.city,
	"country": vars.country
})]' category="weather-service-v1.get-weather-by-city.reponse" />
	</flow>
	<sub-flow name="get-weather-by-city-request-subflow" doc:id="0960aa05-a1e0-4ca1-8946-92e7784aa14a">
		<logger level="INFO" doc:name="Log request" doc:id="2774b697-fd3d-482d-a214-7d653fbd57e0" message="#[modules::Logs::log(vars)]" category="weather-service-v1.get-weather-by-city-request-subflow.http.request" />
		<http:request method="POST" doc:name="POST to Weather webservice to retrieve weather by city" doc:id="68382186-6fca-4219-8cda-8e1170600f98" path="/GlobalWeather" outputMimeType="application/java" config-ref="Weather_Server_HTTP_Request_configuration">
			<http:body><![CDATA[#["<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:web=\"http://www.webserviceX.NET\">
   <soapenv:Header/>
   <soapenv:Body>
      <web:GetWeather>
         <!--Optional:-->
         <web:CityName>$(vars.city)</web:CityName>
         <!--Optional:-->
         <web:CountryName>$(vars.country)</web:CountryName>
      </web:GetWeather>
   </soapenv:Body>
</soapenv:Envelope>"]]]></http:body>
			<http:headers><![CDATA[#[output application/java
---
{
	"Content-Type" : "application/xml"
}]]]></http:headers>
		</http:request>
		<logger level="INFO" doc:name="Log response" doc:id="0b714d07-28a8-4a12-a833-e5a24f99cb36" message="#[modules::Logs::log(vars)]" category="weather-service-v1.get-weather-by-city-request-subflow.http.response"/>
	</sub-flow>
</mule>
